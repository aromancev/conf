syntax = "proto3";

service RTC {
    rpc CreateRoom(Room) returns (Room) {}
    rpc StartRecording(RecordingParams) returns (Recording) {}
    rpc StopRecording(RecordingLookup) returns (Recording) {}
}

message Room {
    bytes id = 1;
    bytes ownerId = 2;
}

message RecordingParams {
    bytes room_id = 1;
    string key = 2;
    int64 expire_in_ms = 3;
}

message RecordingLookup {
    bytes room_id = 1;
    bytes recording_id = 2;
    string key = 3;
}

message Recording {
    bytes room_id = 1;
    bytes recording_id = 2;
    int64 started_at = 3;
    bool already_exists = 4;
}

message StoreEvent {
    Event event = 1;
}

message Event {
    message Track {
        string id = 1;
        string hint = 2;
    }

    message Payload {
        message PayloadPeerState {
            bytes peer_id = 1;
            bytes session_id = 2;
            string status = 3;  
            repeated Track tracks = 4;        
        }
        message PayloadMessage {
            bytes from_id = 1;
            string text = 2;
        }
        message PayloadRecording {
            string status = 1;
        }
        message PayloadTrackRecording {
            bytes id = 1;
            string track_id = 2;
        }

        PayloadPeerState peer_state = 1;
        PayloadMessage message = 2;
        PayloadRecording recording = 3;
        PayloadTrackRecording track_recording = 4;
    }

    Payload payload = 1;
    bytes id = 2;
    bytes room_id = 3;
    int64 created_at = 4;
}
