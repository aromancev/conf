version: '3.9'
services:
  nginx:
    image: nginx:1.19.6
    networks:
      - confa
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf

  web:
    build:
      context: ./web
      dockerfile: Dockerfile.dev
    command: pnpm run serve
    networks:
      - confa
    volumes:
      - ./web/src:/app/src
      - ./web/public:/app/public

  gateway:
    restart: on-failure
    depends_on:
      - confa
      - rtc
      
    build:
      context: ./service-go
      dockerfile: Dockerfile
    command: "go run ./cmd/gateway/. -conf /config.json"
    networks:
      - confa
    volumes:
      - ./service-go:/app
      - ./service-go/cmd/gateway/config.json:/config.json

  iam:
    build:
      context: ./service-go
      dockerfile: Dockerfile
    command: "go run ./cmd/iam/."
    networks:
      - confa
    environment:
      - ADDRESS=:80
      - BASE_URL=http://localhost
      - LOG_FORMAT=console
      - SECRET_KEY=$SECRET_KEY
      - PUBLIC_KEY=$PUBLIC_KEY
      - EMAIL_SERVER=email
      - EMAIL_PORT=1025
      - EMAIL_ADDRESS=noreply@confa.io
      - EMAIL_PASSWORD=stub
      - EMAIL_SECURE=false
      - MONGO_HOSTS=mongo:27017
      - MONGO_USER=iam
      - MONGO_PASSWORD=iam
      - MONGO_DATABASE=iam
      - BEANSTALKD_POOL=beanstalkd:11300
    volumes:
      - ./service-go:/app

  confa:
    build:
      context: ./service-go
      dockerfile: Dockerfile
    command: "go run ./cmd/confa/."
    networks:
      - confa
    environment:
      - ADDRESS=:80
      - RTC_ADDRESS=http://rtc:8080
      - LOG_FORMAT=console
      - PUBLIC_KEY=$PUBLIC_KEY
      - MONGO_HOSTS=mongo:27017
      - MONGO_USER=confa
      - MONGO_PASSWORD=confa
      - MONGO_DATABASE=confa
    volumes:
      - ./service-go:/app

  rtc:
    build:
      context: ./service-go
      dockerfile: Dockerfile
    command: "go run ./cmd/rtc/."
    networks:
      - confa
    environment:
      - ADDRESS=:80
      - RPC_ADDRESS=:8080
      - LOG_FORMAT=console
      - PUBLIC_KEY=$PUBLIC_KEY
      - MONGO_HOSTS=mongo:27017
      - MONGO_USER=rtc
      - MONGO_PASSWORD=rtc
      - MONGO_DATABASE=rtc
      - BEANSTALKD_POOL=beanstalkd:11300
      - RTC_SFU_ADDRESS=sfu:8080
    volumes:
      - ./service-go:/app

  sfu:
    build:
      context: ./service-go
      dockerfile: Dockerfile
    command: "go run ./cmd/sfu/."
    environment:
      - ADDRESS=:8080
      - ICE_PORT_MIN=5000
      - ICE_PORT_MAX=5010
      - ICE_URLS=stun:stun.stunprotocol.org:3478
      - LOG_FORMAT=console
    volumes:
      - ./service-go:/app
    networks:
      - confa

  beanstalkd:
    build:
      context: ./beanstalkd
      dockerfile: Dockerfile
    networks:
      - confa
    volumes:
      - ./.artifacts/beanstalkd:/var/lib/beanstalkd

  mongo:
    image: mongo:4.4
    command: "mongod --dbpath /data/db --replSet rs --keyFile /etc/mongo/mongo-repl.key"
    networks:
      - confa
    environment:
      - MONGO_INITDB_ROOT_USERNAME=mongo
      - MONGO_INITDB_ROOT_PASSWORD=mongo
    volumes:
      - ./.artifacts/mongo/:/data/db
    entrypoint:
      - bash
      - -c
      - |
        mkdir /etc/mongo
        openssl rand -base64 768 > /etc/mongo/mongo-repl.key
        chmod 400 /etc/mongo/mongo-repl.key
        chown 999:999 /etc/mongo/mongo-repl.key
        exec docker-entrypoint.sh $$@

  email-client:
    image: kbedel/fake-smtp-server
    profiles: [ "email-client" ]
    command: fake-smtp-server -s 1025 -h 80
    networks:
      - confa

networks:
  confa:
    name: confa
