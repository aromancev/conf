version: '3.9'

x-go-common: &go-common
  image: golang:1.19-alpine
  restart: on-failure
  volumes:
    - ./auth:/app/auth:delegated
    - ./gateway:/app/gateway:delegated
    - ./proto:/app/proto:delegated
    - ./service-go:/app/service-go:delegated
    - ./telemetry:/app/telemetry:delegated
    - ./avp:/app/avp:delegated
    - ./iam:/app/iam:delegated
    - ./gateway/cmd/gateway/config.json:/config.json:delegated
  networks:
      - confa

x-go-env: &go-env
  GOWORK: "off"
  LOG_FORMAT: "console"
  LISTEN_WEB_ADDRESS: ":80"
  LISTEN_RPC_ADDRESS: ":8080"
  SECRET_KEY: "LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUI4Zm1WV2hNZEFvL1VrRE5ONFVHbzhQWXdLeHovbE43bmlsbVlhMktFa2JvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFVHJNZDBCcjdHT3BFN1VTMWpKN0xiTDBMOHZJaTNOeFJ4blhoT3hEV2FBaGQ0TXhkRjE3ZgpBWTVPR2pKcFBkV0o4VERNUUg3RXM5OFNBQjlwVlJWWmhnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo="
  PUBLIC_KEY: "LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0RRZ0FFVHJNZDBCcjdHT3BFN1VTMWpKN0xiTDBMOHZJaQozTnhSeG5YaE94RFdhQWhkNE14ZEYxN2ZBWTVPR2pKcFBkV0o4VERNUUg3RXM5OFNBQjlwVlJWWmhnPT0KLS0tLS1FTkQgUFVCTElDIEtFWS0tLS0tCg=="
  MONGO_HOSTS: "mongo:27017"
  BEANSTALK_POOL: "beanstalk:11300"
  BEANSTALK_TUBE_SEND_EMAIL: "iam/send-email"
  BEANSTALK_TUBE_UPDATE_AVATAR: "confa/update-avatar"
  BEANSTALK_TUBE_START_RECORDING: "confa/start-recording"
  BEANSTALK_TUBE_STOP_RECORDING: "confa/stop-recording"
  BEANSTALK_TUBE_STORE_EVENT: "rtc/store-event"
  BEANSTALK_TUBE_PROCESS_TRACK: "avp/process-track"
  STORAGE_HOST: "minio:80"
  STORAGE_ACCESS_KEY: "minio"
  STORAGE_SECRET_KEY: "miniominio"
  STORAGE_PUBLIC_URL: "/api/storage"
  STORAGE_BUCKET_USER_PUBLIC: "user-public"
  STORAGE_BUCKET_USER_UPLOADS: "user-uploads"
  STORAGE_BUCKET_TRACK_RECORDS: "confa-tracks-internal"
  STORAGE_BUCKET_TRACK_PUBLIC: "confa-tracks-public"

services:
  nginx:
    image: nginx:1.19.6
    restart: on-failure
    networks:
      - confa
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf

  web:
    restart: on-failure
    build:
      context: ./web
      dockerfile: Dockerfile.dev
    command: pnpm run serve
    networks:
      - confa
    environment:
      VITE_RTC_ROOM_URL: "ws://localhost/api/rtc/room/socket"
      VITE_SFU_TURN_URLS: "turn:localhost?transport=tcp"
      VITE_STORAGE_URL: "/api/storage"
    volumes:
      - ./web/src:/app/src
      - ./web/public:/app/public

  gateway:
    <<: *go-common
    working_dir: /app/gateway
    command: "go run ./cmd/gateway -conf /config.json"
    environment:
      <<: *go-env

  iam:
    <<: *go-common
    working_dir: /app/iam
    command: "go run ./cmd/iam"
    environment:
      <<: *go-env
      BASE_URL: "http://localhost"
      EMAIL_SERVER: "email-client"
      EMAIL_PORT: "1025"
      EMAIL_ADDRESS: "noreply@confa.io"
      EMAIL_PASSWORD: "stub"
      EMAIL_SECURE: "false"
      MONGO_USER: "iam"
      MONGO_PASSWORD: "iam"
      MONGO_DATABASE: "iam"

  confa:
    <<: *go-common
    working_dir: /app/service-go
    command: "go run ./cmd/confa"
    environment:
      <<: *go-env
      RTC_ADDRESS: "http://rtc:8080"
      MONGO_USER: "confa"
      MONGO_PASSWORD: "confa"
      MONGO_DATABASE: "confa"

  rtc:
    <<: *go-common
    working_dir: /app/service-go
    command: "go run ./cmd/rtc"
    environment:
      <<: *go-env
      MONGO_USER: "rtc"
      MONGO_PASSWORD: "rtc"
      MONGO_DATABASE: "rtc"
      RTC_SFU_ADDRESS: "sfu:8080"
      TRACKER_RPC_ADDRESS: "http://tracker:8080"

  sfu:
    <<: *go-common
    working_dir: /app/service-go
    command: "go run ./cmd/sfu"
    environment:
      <<: *go-env
      ICE_PORT_MIN: "5000"
      ICE_PORT_MAX: "5010"
      ICE_URLS: "stun:stun.stunprotocol.org:3478"

  turn:
    <<: *go-common
    working_dir: /app/service-go
    command: "go run ./cmd/turn"
    ports:
      - "3478:3478"
    environment:
      <<: *go-env
      LISTEN_WEB_ADDRESS: ":3478"
      REALM: "confa.io"
      USERNAME: "confa"
      CREDENTIAL: "confa"
      PUBLIC_IP: "127.0.0.1"

  tracker:
    <<: *go-common
    working_dir: /app/service-go
    command: "go run ./cmd/tracker"
    environment:
      <<: *go-env
      SFU_ADDRESS: "sfu:8080"

  avp:
    <<: *go-common
    build:
      dockerfile: Dockerfile
    working_dir: /app/avp
    command: "go run ./cmd/avp"
    environment:
      <<: *go-env

  beanstalk:
    restart: on-failure
    build:
      context: ./beanstalk
      dockerfile: Dockerfile
    networks:
      - confa
    volumes:
      - .artifacts/beanstalk:/var/lib/beanstalkd

  mongo:
    restart: on-failure
    image: mongo:4.4
    command: "mongod --dbpath /data/db --replSet rs --keyFile /etc/mongo/mongo-repl.key"
    networks:
      - confa
    environment:
      - MONGO_INITDB_ROOT_USERNAME=mongo
      - MONGO_INITDB_ROOT_PASSWORD=mongo
    volumes:
      - .artifacts/mongo/:/data/db
    entrypoint:
      - bash
      - -c
      - |
        mkdir /etc/mongo
        openssl rand -base64 768 > /etc/mongo/mongo-repl.key
        chmod 400 /etc/mongo/mongo-repl.key
        chown 999:999 /etc/mongo/mongo-repl.key
        exec docker-entrypoint.sh $$@

  minio:
    restart: on-failure
    image: minio/minio:RELEASE.2022-04-16T04-26-02Z
    command: server /data --address=":80"
    environment:
      - MINIO_ROOT_USER=minio
      - MINIO_ROOT_PASSWORD=miniominio
      - MINIO_BROWSER=off
    networks:
      - confa
    volumes:
      - .artifacts/minio:/data

  email-client:
    restart: on-failure
    image: kbedel/fake-smtp-server
    profiles: [ "email-client" ]
    command: fake-smtp-server -s 1025 -h 80
    networks:
      - confa
    ports:
      - "8001:80"

networks:
  confa:
    name: confa
