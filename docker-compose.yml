version: '3.9'
services:
  nginx:
    image: nginx:1.19.6
    networks:
      - confa
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf

  web:
    build:
      context: ./web
      dockerfile: Dockerfile.dev
    command: pnpm run serve
    networks:
      - confa
    environment:
      - VITE_RTC_ROOM_URL=ws://localhost/api/rtc/room/socket
      - VITE_SFU_TURN_URLS=turn:localhost?transport=tcp
      - VITE_STORAGE_URL=/api/storage
    volumes:
      - ./web/src:/app/src
      - ./web/public:/app/public

  gateway:
    restart: on-failure
    depends_on:
      - confa
      - rtc
      
    build:
      context: ./service-go
      dockerfile: Dockerfile
    command: "go run ./cmd/gateway/. -conf /config.json"
    networks:
      - confa
    volumes:
      - ./service-go:/app
      - ./service-go/cmd/gateway/config.json:/config.json

  iam:
    build:
      context: ./service-go
      dockerfile: Dockerfile
    command: "go run ./cmd/iam/."
    networks:
      - confa
    environment:
      - LISTEN_WEB_ADDRESS=:80
      - BASE_URL=http://localhost
      - LOG_FORMAT=console
      - SECRET_KEY=$SECRET_KEY
      - PUBLIC_KEY=$PUBLIC_KEY
      - EMAIL_SERVER=email-client
      - EMAIL_PORT=1025
      - EMAIL_ADDRESS=noreply@confa.io
      - EMAIL_PASSWORD=stub
      - EMAIL_SECURE=false
      - MONGO_HOSTS=mongo:27017
      - MONGO_USER=iam
      - MONGO_PASSWORD=iam
      - MONGO_DATABASE=iam
      - BEANSTALKD_POOL=beanstalkd:11300
      - BEANSTALKD_TUBE_SEND_EMAIL=iam/send-email
    volumes:
      - ./service-go:/app

  confa:
    build:
      context: ./service-go
      dockerfile: Dockerfile
    command: "go run ./cmd/confa/."
    networks:
      - confa
    environment:
      - LISTEN_WEB_ADDRESS=:80
      - RTC_ADDRESS=http://rtc:8080
      - LOG_FORMAT=console
      - PUBLIC_KEY=$PUBLIC_KEY
      - MONGO_HOSTS=mongo:27017
      - MONGO_USER=confa
      - MONGO_PASSWORD=confa
      - MONGO_DATABASE=confa
      - STORAGE_HOST=minio:80
      - STORAGE_ACCESS_KEY=minio
      - STORAGE_SECRET_KEY=miniominio
      - STORAGE_PUBLIC_URL=/api/storage
      - STORAGE_BUCKET_USER_UPLOADS=user-uploads
      - STORAGE_BUCKET_USER_PUBLIC=user-public
      - BEANSTALKD_POOL=beanstalkd:11300
      - BEANSTALKD_TUBE_UPDATE_AVATAR=confa/update-avatar
    volumes:
      - ./service-go:/app

  rtc:
    build:
      context: ./service-go
      dockerfile: Dockerfile
    command: "go run ./cmd/rtc/."
    networks:
      - confa
    environment:
      - LOG_FORMAT=console
      - LISTEN_WEB_ADDRESS=:80
      - LISTEN_RPC_ADDRESS=:8080
      - PUBLIC_KEY=$PUBLIC_KEY
      - MONGO_HOSTS=mongo:27017
      - MONGO_USER=rtc
      - MONGO_PASSWORD=rtc
      - MONGO_DATABASE=rtc
      - RTC_SFU_ADDRESS=sfu:8080
      - BEANSTALKD_POOL=beanstalkd:11300
      - BEANSTALKD_TUBE_STORE_EVENT=rtc/store-event
    volumes:
      - ./service-go:/app

  sfu:
    build:
      context: ./service-go
      dockerfile: Dockerfile
    command: "go run ./cmd/sfu/."
    volumes:
      - ./service-go:/app
    networks:
      - confa
    environment:
      - LISTEN_WEB_ADDRESS=:8080
      - ICE_PORT_MIN=5000
      - ICE_PORT_MAX=5010
      - ICE_URLS=stun:stun.stunprotocol.org:3478
      - LOG_FORMAT=console

  turn:
    build:
      context: ./service-go
      dockerfile: Dockerfile
    command: "go run ./cmd/turn/."
    ports:
      - "3478:3478"
    volumes:
      - ./service-go:/app
    networks:
      - confa
    environment:
      - LISTEN_WEB_ADDRESS=:3478
      - LOG_FORMAT=console
      - REALM=confa.io
      - USERNAME=confa
      - CREDENTIAL=confa
      - PUBLIC_IP=127.0.0.1
      - PUBLIC_KEY=$PUBLIC_KEY

  beanstalkd:
    build:
      context: ./beanstalkd
      dockerfile: Dockerfile
    networks:
      - confa
    volumes:
      - .artifacts/beanstalkd:/var/lib/beanstalkd

  mongo:
    image: mongo:4.4
    command: "mongod --dbpath /data/db --replSet rs --keyFile /etc/mongo/mongo-repl.key"
    networks:
      - confa
    environment:
      - MONGO_INITDB_ROOT_USERNAME=mongo
      - MONGO_INITDB_ROOT_PASSWORD=mongo
    volumes:
      - ./.artifacts/mongo/:/data/db
    entrypoint:
      - bash
      - -c
      - |
        mkdir /etc/mongo
        openssl rand -base64 768 > /etc/mongo/mongo-repl.key
        chmod 400 /etc/mongo/mongo-repl.key
        chown 999:999 /etc/mongo/mongo-repl.key
        exec docker-entrypoint.sh $$@

  minio:
    image: minio/minio:RELEASE.2022-04-16T04-26-02Z
    command: server /data --address=":80"
    environment:
      - MINIO_ROOT_USER=minio
      - MINIO_ROOT_PASSWORD=miniominio
      - MINIO_BROWSER=off
    networks:
      - confa
    volumes:
      - .artifacts/minio:/data

  email-client:
    image: kbedel/fake-smtp-server
    profiles: [ "email-client" ]
    command: fake-smtp-server -s 1025 -h 80
    networks:
      - confa
    ports:
      - "8001:80"

networks:
  confa:
    name: confa
