syntax = "proto3";

service SFU {
    rpc Signal(stream SignalRequest) returns (stream SignalReply) {}
}

message SignalRequest {
    message JoinSession {
        string session_id = 1;
        string user_id = 2;
        SessionDescription description = 3;
    }

    uint32 id = 1;
    oneof payload {
        JoinSession join = 2;
        SessionDescription offer = 3;
        SessionDescription answer = 4;
        Trickle trickle = 5;
    }
}

message SignalReply {
    uint32 id = 1;
    oneof payload {
        SessionDescription join = 2;
        SessionDescription offer = 3;
        Trickle trickle = 4;
        string error = 5;
    }
}

message SessionDescription {
    int32 type = 1;
    string sdp = 2;
}

message Trickle {
    int32 target = 1;
    CandidateInit candidate = 2;
}

message CandidateInit {
    string candidate = 1;
    bool sdpm_id_set = 2;
    string sdpm_id = 3;
    bool sdpm_line_index_set = 4;
    uint32 sdpm_line_index = 5;
    bool username_fragment_set = 6;
    string username_fragment = 7;
}
