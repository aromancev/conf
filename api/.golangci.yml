# https://golangci-lint.run/usage/configuration

run:
  timeout: 2m
  skip-files:
    - ".*\\.pb\\.go$"
    - ".*\\.twirp\\.go$"
    - ".*\\.gql\\.go$"

linters:
  enable:
    - bodyclose # checks whether HTTP response body is closed successfully
    - deadcode # Finds unused code
    - errcheck # Errcheck is a program for checking for unchecked errors in go programs. These unchecked errors can be critical bugs in some cases
    - gocritic # The most opinionated Go source code linter
    - godot # Check if comments end in a period
    - gofmt # Gofmt checks whether code was gofmt-ed. By default this tool runs with -s option to check for code simplification
    - golint # Golint differs from gofmt. Gofmt reformats Go source code, whereas golint prints out style mistakes
    - gosec # Inspects source code for security problems
    - gosimple # Linter for Go source code that specializes in simplifying a code
    - govet # Vet examines Go source code and reports suspicious constructs, such as Printf calls whose arguments do not align with the format string
    - ineffassign # Detects when assignments to existing variables are not used
    - staticcheck # Staticcheck is a go vet on steroids, applying a ton of static analysis checks
    - structcheck # Finds unused struct fields
    - stylecheck # Stylecheck is a replacement for golint
    - typecheck # Like the front-end of a Go compiler, parses and type-checks Go code
    - unused # Checks Go code for unused constants, variables, functions and types
    - varcheck # Finds unused global variables and constants
    - whitespace # Tool for detection of leading and trailing whitespace

linters-settings:
  gocritic:
    enabled-tags:
      - diagnostic
      - experimental
      - opinionated
      - performance
      - style
    disabled-checks:
      - dupImport # https://github.com/go-critic/go-critic/issues/845
      - unnamedResult
      - whyNoLint
    settings:
      rangeValCopy:
        sizeThreshold: 512
      hugeParam:
        sizeThreshold: 1024
